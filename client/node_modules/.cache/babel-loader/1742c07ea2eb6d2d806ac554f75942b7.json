{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = {\n  isLoading: true,\n  posts: [],\n  post: {}\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/reducers/posts.js"],"names":["START_LOADING","END_LOADING","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","reducer","state","isLoading","posts","post","action","type","payload","data","currentPage","numberOfPages","map","_id","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,eAA5D,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,QAAiH,0BAAjH;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE,EAA1B;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAAT,EAAmDC,MAAnD,KAA8D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,aAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,IAAI,EAAEC,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKb,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELE,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKf,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELE,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKR,IAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBP,IAAD,IAAWA,IAAI,CAACQ,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeK,GAA5B,GAAkCP,MAAM,CAACE,OAAzC,GAAmDH,IAA9E;AAAnB,OAAP;;AACF,SAAKR,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBE,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AACF,SAAKV,MAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBP,IAAD,IAAWA,IAAI,CAACQ,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeK,GAA5B,GAAkCP,MAAM,CAACE,OAAzC,GAAmDH,IAA9E;AAAnB,OAAP;;AACF,SAAKN,MAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaP,MAAM,CAACE,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAON,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = { isLoading: true, posts: [], post: {} }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}