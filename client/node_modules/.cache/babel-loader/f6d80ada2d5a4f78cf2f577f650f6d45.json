{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/reducers/posts.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","reducer","state","isLoading","posts","action","type","FETCH_","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,eAAhD,EAAiEC,MAAjE,EAAyEC,MAAzE,EAAiFC,MAAjF,EAAyFC,IAAzF,QAAqG,0BAArG;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,aAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,WAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKI,MAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACG,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACG,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKf,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKR,IAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;;AACF,SAAKhB,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACG,OAAxB;AAAnB,OAAP;;AACF,SAAKV,MAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;;AACF,SAAKd,MAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYW,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAON,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}