{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Desktop/Projects/memories-mern/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Post from './Post/Post';\nimport makeStyles from './styles';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { getPosts } from '../../actions/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = makeStyles();\n  const posts = useSelector(state => state.posts);\n  console.log(\" Posts ===> \", posts);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  return !posts.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Posts, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", true, function () {\n  return [useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/components/Posts/Posts.js"],"names":["React","Post","makeStyles","Grid","CircularProgress","useSelector","getPosts","Posts","currentId","setCurrentId","dispatch","useDispatch","classes","posts","state","console","log","useEffect","length","container","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA;;AAE3C,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACZP,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACE,SAAD,EAAYE,QAAZ,CAFM,CAAT;AAKA,SACI,CAACG,KAAK,CAACK,MAAP,gBAAgB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,gBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEN,OAAO,CAACO,SAAnC;AAA8C,IAAA,UAAU,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAE,CAA5E;AAAA,cAEQN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACN,QAAC,IAAD;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAkC,MAAA,EAAE,EAAE,CAAtC;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAEZ;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ,OAAWY,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UAFR;AAaH,CAzBD;;GAAMf,K;UAIYF,W;;;KAJZE,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport Post from './Post/Post'\nimport makeStyles from './styles'\nimport { Grid, CircularProgress } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getPosts } from '../../actions/'\n\nconst Posts = ({ currentId, setCurrentId }) => {\n\n    const dispatch = useDispatch()\n    const classes = makeStyles();\n    const posts = useSelector(state => state.posts)\n    console.log(\" Posts ===> \", posts);\n\n    useEffect(() => {\n        dispatch(getPosts())\n    }, [currentId, dispatch])\n\n\n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid container className={classes.container} alignItems=\"stretch\" spacing={3}>\n                {\n                    posts.map((post) => (\n                        <Grid key={post._id} item xs={12} sm={6}>\n                            <Post post={post} setCurrentId={setCurrentId} />\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    )\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}