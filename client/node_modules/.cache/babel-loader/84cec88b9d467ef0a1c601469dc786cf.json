{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    console.log(\"id\", id);\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    console.log(\"data\", data);\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}; // <------------- #04 ------------>\n\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/actions/posts.js"],"names":["START_LOADING","END_LOADING","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","api","getPost","id","dispatch","type","console","log","data","fetchPost","payload","error","message","getPosts","page","fetchPosts","createPost","post","updatePost","likePost","deletePost","getPostsBySearch","searchQuery","fetchPostsBySearch"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,eAA5D,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,QAAiH,0BAAjH;AAEA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,EAAjB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACQ,SAAJ,CAAcN,EAAd,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,UAAR;AAAoBgB,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBC,IAAnB;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD,GARD,CAQE,OAAOkB,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CAZM;AAcP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEgB,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACc,UAAJ,CAAeD,IAAf,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,SAAR;AAAmBe,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD,GAPD,CAOE,OAAOkB,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CAXM;AAaP,OAAO,MAAMI,UAAU,GAAIC,IAAD,IAAU,MAAOb,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACe,UAAJ,CAAeC,IAAf,CAAvB;AAEAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,MAAR;AAAgBa,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMM,UAAU,GAAG,CAACf,EAAD,EAAKc,IAAL,KAAc,MAAOb,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACiB,UAAJ,CAAef,EAAf,EAAmBc,IAAnB,CAAvB;AAEAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,MAAR;AAAgBY,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMO,QAAQ,GAAIhB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACkB,QAAJ,CAAahB,EAAb,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,IAAR;AAAcU,MAAAA,OAAO,EAAEF;AAAvB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMQ,UAAU,GAAIjB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMH,GAAG,CAACmB,UAAJ,CAAejB,EAAf,CAAN;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,MAAR;AAAgBW,MAAAA,OAAO,EAAEP;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOQ,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CARM,C,CAWP;;AAEA,OAAO,MAAMS,gBAAgB,GAAIC,WAAD,IAAiB,MAAOlB,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AAEA,UAAM;AAACgB,MAAAA,IAAI,EAAE;AAACA,QAAAA;AAAD;AAAP,QAAiB,MAAMP,GAAG,CAACsB,kBAAJ,CAAuBD,WAAvB,CAA7B;AACAlB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,eAAR;AAAyBc,MAAAA,OAAO,EAAEF;AAAlC,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD,GAPD,CAOE,OAAOkB,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD;AACF,CAXM","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING })\n    console.log(\"id\",id)\n    const { data } = await api.fetchPost(id);\n    dispatch({ type: FETCH_POST, payload: data });\n    console.log(\"data\",data)\n\n    dispatch({ type: END_LOADING })\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING })\n    \n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n\n    dispatch({ type: END_LOADING })\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n// <------------- #04 ------------>\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING })\n\n    const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data})\n    \n    dispatch({ type: END_LOADING })\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}