{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Desktop/Projects/memories-mern/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport makeStyles from './styles';\nimport { Paper, TextField, Typography, Button } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const classes = makeStyles();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = posts.find(post => post._id === currentId ? post : null); // const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, pos));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId = null;\n    setPostData = {\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: ` ${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"m1yTyacLS5REW2TyCBS0RID2XnA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","makeStyles","Paper","TextField","Typography","Button","FileBase","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","classes","dispatch","posts","state","postData","setPostData","creator","title","message","tags","selectedFile","post","find","_id","handleSubmit","e","preventDefault","pos","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport makeStyles from './styles'\nimport { Paper, TextField, Typography, Button } from '@material-ui/core';\nimport FileBase from 'react-file-base64'\nimport { useDispatch } from 'react-redux'\nimport { createPost, updatePost } from '../../actions/posts'\nimport { useSelector } from 'react-redux'\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n    const classes = makeStyles();\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.posts)\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const post = posts.find((post) => post._id === currentId ? post : null)\n    // const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n\n    useEffect(() => {\n        if (post) setPostData(post);\n    }, [post]);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (currentId) {\n            dispatch(updatePost(currentId, pos))\n        }\n        else {\n            dispatch(createPost(postData))\n        }\n        clear()\n    }\n\n    const clear = () => {\n        setCurrentId = null;\n        setPostData = { creator: '', title: '', message: '', tags: '', selectedFile: '' }\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={` ${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Create</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })} />\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}></FileBase></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;\n\n\n\n"]},"metadata":{},"sourceType":"module"}