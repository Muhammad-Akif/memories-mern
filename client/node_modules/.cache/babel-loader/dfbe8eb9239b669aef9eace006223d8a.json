{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Desktop/Projects/memories-mern/client/src/components/PostDetails/commentSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = ({\n  post\n}) => {\n  _s();\n\n  console.log(\"post --> \", post);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState([1, 2, 3, 4, 5]);\n  const [comment, setComment] = useState();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const handleClick = () => {\n    const finalComment = `${user.result.name}: ${comment}`;\n    dispatch(commentPost(finalComment, post._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.commentsOuterContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsInnerContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"subtitle1\",\n        children: [\"Comments \", c]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        children: \"Write a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        rows: 4,\n        label: \"Comment\",\n        multiline: true,\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: '10px'\n        },\n        color: \"primary\",\n        fullwidth: true,\n        disabled: !comment,\n        variant: \"contained\",\n        onClick: handleClick,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentSection, \"aXHnjIC6CiGK2uoaptY+iopfYfY=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/components/PostDetails/commentSection.js"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","console","log","classes","dispatch","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","handleClick","finalComment","result","name","_id","commentsOuterContainer","commentsInnerContainer","map","c","i","width","e","target","value","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA6C,mBAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,IAAxB;AACA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,EAAtC;AACA,QAAMkB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,YAAY,GAAI,GAAEN,IAAI,CAACO,MAAL,CAAYC,IAAK,KAAIV,OAAQ,EAArD;AACAH,IAAAA,QAAQ,CAACN,WAAW,CAACiB,YAAD,EAAef,IAAI,CAACkB,GAApB,CAAZ,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACgB,sBAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACiB,sBAAxB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQf,QAAQ,CAACgB,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACT,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,WAAjC;AAAA,gCACcD,CADd;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,IAAI,EAAE,CAHV;AAII,QAAA,KAAK,EAAC,SAJV;AAKI,QAAA,SAAS,MALb;AAMI,QAAA,KAAK,EAAEjB,OANX;AAOI,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAP/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAf;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAqD,QAAA,SAAS,MAA9D;AAA+D,QAAA,QAAQ,EAAE,CAACrB,OAA1E;AAAmF,QAAA,OAAO,EAAC,WAA3F;AAAsG,QAAA,OAAO,EAAEO,WAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA1CD;;GAAMf,c;UAEcF,S,EACCD,W;;;KAHfG,c;AA4CN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef} from 'react';\nimport { Typography, TextField, Button} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles'\nimport { commentPost } from \"../../actions/posts\"\n\nconst CommentSection = ({post}) => {\n    console.log(\"post --> \",post)\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [comments, setComments] = useState([1,2,3,4,5]) \n    const [comment, setComment] = useState() \n    const user = JSON.parse(localStorage.getItem('profile'));\n    \n    const handleClick = () => {\n        const finalComment = `${user.result.name}: ${comment}`\n        dispatch(commentPost(finalComment, post._id))\n    }\n\n    return (\n        <div className={classes.commentsOuterContainer}>\n            <div className={classes.commentsInnerContainer}>\n                <Typography gutterBottom variant=\"h6\">Comments</Typography>\n                {\n                    comments.map((c, i) => (\n                        <Typography gutterBottom variant=\"subtitle1\">\n                            Comments {c} \n                        </Typography>\n                    ))\n                }\n            </div>\n            <div style={{ width: \"70%\" }}>\n                <Typography gutterBottom variant=\"h6\">Write a Comment</Typography>\n                <TextField\n                    fullWidth \n                    variant=\"outlined\"\n                    rows={4}\n                    label=\"Comment\"\n                    multiline\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <Button style={{ marginTop: '10px'}} color=\"primary\" fullwidth disabled={!comment} variant=\"contained\"onClick={handleClick}>\n                    Comment\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}