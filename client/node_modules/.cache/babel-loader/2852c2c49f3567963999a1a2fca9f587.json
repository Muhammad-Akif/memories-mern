{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.data\n      };\n\n    case FETCH_ALL:\n      console.log(\"yup\");\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/muhammad/Desktop/Projects/memories-mern/client/src/reducers/posts.js"],"names":["START_LOADING","END_LOADING","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","reducer","state","isLoading","posts","action","type","post","payload","data","console","log","currentPage","numberOfPages","map","_id","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,eAA5D,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,QAAiH,0BAAjH;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,aAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELK,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeC;AAFhB,OAAP;;AAIF,SAAKd,SAAL;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAO,EACL,GAAGT,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACG,OAAP,CAAeC,IAFjB;AAGLG,QAAAA,WAAW,EAAEP,MAAM,CAACG,OAAP,CAAeI,WAHvB;AAILC,QAAAA,aAAa,EAAER,MAAM,CAACG,OAAP,CAAeK;AAJzB,OAAP;;AAMA,SAAKjB,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKR,IAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,GAAZ,CAAiBP,IAAD,IAAWA,IAAI,CAACQ,GAAL,KAAaV,MAAM,CAACG,OAAP,CAAeO,GAA5B,GAAkCV,MAAM,CAACG,OAAzC,GAAmDD,IAA9E;AAAnB,OAAP;;AACF,SAAKV,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACG,OAAxB;AAAnB,OAAP;;AACF,SAAKV,MAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,GAAZ,CAAiBP,IAAD,IAAWA,IAAI,CAACQ,GAAL,KAAaV,MAAM,CAACG,OAAP,CAAeO,GAA5B,GAAkCV,MAAM,CAACG,OAAzC,GAAmDD,IAA9E;AAAnB,OAAP;;AACF,SAAKR,MAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYY,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaV,MAAM,CAACG,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAON,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload.data\n      };\n    case FETCH_ALL:\n    console.log(\"yup\");\n    return {\n      ...state,\n      posts: action.payload.data,\n      currentPage: action.payload.currentPage,\n      numberOfPages: action.payload.numberOfPages\n    };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}